version: "3.7"

volumes:
  neo4jstorage:
  rstudioStorage:

services:
  api:
    #depends_on:
    #  - neo4j
    build: images/discovery-index
    image: oneilsh/discovery-index:0.1.3
    ports:
      - "443:443"
    environment:
      - PORT=443
      - NEO_4J_ENDPOINT=http://neo4j:7474/db/data/cypher
    env_file:
      - images/discovery-index/git-crypt/RUN_VARS
    command: npm run prod

    volumes:
      - type: bind
        target: /usr/src/app/git-crypt/certs
        source: ./images/discovery-index/git-crypt/certs
      - type: bind
        target: /var/log/discovery_index
        source: ./logs



  neo4j:
    volumes:
      - neo4jstorage:/var/lib/neo4j
    image: neo4j:3.5
    environment:
      NEO4J_dbms_logs_debug_level: DEBUG
      NEO4J_dbms_ssl_policy_certs_base__directory: certificates/certs
      NEO4J_dbms_ssl_policy_certs_client__auth: "NONE"
      NEO4J_bolt_ssl__policy: certs
      NEO4J_https_ssl__policy: certs
      NEO4JLABS_PLUGINS: '["apoc"]'
    ports:  # these ports are mapped to ports on the host machine
      - "7473:7473"
      - "7687:7687"
    expose: # these ports are only exposed to the docker service network (using non-ssl interface for internal traffic)
      - "7474"
    env_file:
      - images/discovery-index/git-crypt/RUN_VARS
    volumes:
      - type: bind
        target: /var/lib/neo4j/certificates/certs
        source: ./images/discovery-index/git-crypt/certs

  rstudio:
    image: rocker/rstudio:3.6.2
    expose: # these ports are only exposed to the docker service network (using non-ssl interface for internal traffic)
      - "8787"
    environment:
      PASSWORD: dumbpassword
    volumes:
      - rstudioStorage:/data/rstudio
